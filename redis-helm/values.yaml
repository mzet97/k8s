# Configuração personalizada para Redis Bitnami Helm Chart
# Mantém 1 master + 3 replicas com TLS e DNS

# Configuração global
global:
  redis:
    password: "redis123"
  storageClass: ""
  # Permitir imagens não-padrão (necessário para Bitnami charts recentes)
  security:
    allowInsecureImages: true

# Configuração de autenticação
auth:
  enabled: true
  password: "redis123"
  existingSecret: ""
  existingSecretPasswordKey: ""

# Configuração da arquitetura
architecture: replication

# Configuração do Master
master:
  count: 1
  configuration: |
    # Configurações do Redis Master
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    tcp-keepalive 60
    tcp-backlog 511
    timeout 0
    
  persistence:
    enabled: true
    storageClass: ""
    size: 8Gi
    
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m
      
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  service:
    type: ClusterIP
    ports:
      redis: 6379

# Configuração das Replicas
replica:
  replicaCount: 3
  configuration: |
    # Configurações do Redis Replica
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    tcp-keepalive 60
    tcp-backlog 511
    timeout 0
    
  persistence:
    enabled: true
    storageClass: ""
    size: 8Gi
    
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m
      
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  service:
    type: ClusterIP
    ports:
      redis: 6379

# Configuração TLS
tls:
  enabled: true
  authClients: true
  autoGenerated: true
  existingSecret: ""
  certificatesSecret: ""
  certFilename: "tls.crt"
  certKeyFilename: "tls.key"
  certCAFilename: "ca.crt"
  dhParamsFilename: "redis.dh"

# Configuração de rede
networkPolicy:
  enabled: false
  allowExternal: true
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

# Configuração do ServiceAccount
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true
  annotations: {}

# Configuração RBAC
rbac:
  create: true
  rules: []

# Configuração de segurança
podSecurityContext:
  enabled: true
  fsGroup: 1001
  
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop:
    - ALL

# Configuração de monitoramento
metrics:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/redis-exporter
    tag: 1.55.0-debian-11-r2
  
  resources:
    limits:
      memory: 128Mi
      cpu: 200m
    requests:
      memory: 64Mi
      cpu: 50m
      
  serviceMonitor:
    enabled: false
    namespace: ""
    interval: 30s
    scrapeTimeout: ""
    labels: {}
    selector: {}
    relabelings: []
    metricRelabelings: []
    honorLabels: false
    jobLabel: ""

# Configuração Sentinel (desabilitado para usar replication simples)
sentinel:
  enabled: false

# Configuração de volumes adicionais
commonConfiguration: |
  # Configurações comuns para master e replicas
  appendonly yes
  appendfsync everysec
  auto-aof-rewrite-percentage 100
  auto-aof-rewrite-min-size 64mb
  
# Configuração de init containers
volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 11-debian-11-r96
  resources:
    limits: {}
    requests: {}

# Configuração de sysctls
sysctlImage:
  enabled: false
  command: []
  registry: docker.io
  repository: bitnami/bitnami-shell
  tag: 11-debian-11-r96
  mountHostSys: false
  resources:
    limits: {}
    requests: {}

# Configuração de diagnósticos
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity