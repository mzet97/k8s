# ServiceAccount para Redis Exporter
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-exporter
  namespace: redis
---
# Deployment do Redis Exporter para Master
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter-master
  namespace: redis
  labels:
    app: redis-exporter
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-exporter
      role: master
  template:
    metadata:
      labels:
        app: redis-exporter
        role: master
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: redis-exporter
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.55.0
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "rediss://redis-master.redis.svc.cluster.local:6380"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: REDIS_PASSWORD
        - name: REDIS_EXPORTER_TLS_CLIENT_CERT_FILE
          value: "/tls/tls.crt"
        - name: REDIS_EXPORTER_TLS_CLIENT_KEY_FILE
          value: "/tls/tls.key"
        - name: REDIS_EXPORTER_TLS_CA_CERT_FILE
          value: "/tls/ca.crt"
        - name: REDIS_EXPORTER_SKIP_TLS_VERIFICATION
          value: "false"
        - name: REDIS_EXPORTER_CHECK_KEYS
          value: "*"
        - name: REDIS_EXPORTER_CHECK_SINGLE_KEYS
          value: "key1,key2,key3"
        volumeMounts:
        - name: tls-certs
          mountPath: /tls
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: tls-certs
        secret:
          secretName: redis-tls-secret
---
# Deployment do Redis Exporter para Réplicas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter-replica
  namespace: redis
  labels:
    app: redis-exporter
    role: replica
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-exporter
      role: replica
  template:
    metadata:
      labels:
        app: redis-exporter
        role: replica
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: redis-exporter
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["redis-replica"]
              topologyKey: kubernetes.io/hostname
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.55.0
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "rediss://redis-replica.redis.svc.cluster.local:6380"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: REDIS_PASSWORD
        - name: REDIS_EXPORTER_TLS_CLIENT_CERT_FILE
          value: "/tls/tls.crt"
        - name: REDIS_EXPORTER_TLS_CLIENT_KEY_FILE
          value: "/tls/tls.key"
        - name: REDIS_EXPORTER_TLS_CA_CERT_FILE
          value: "/tls/ca.crt"
        - name: REDIS_EXPORTER_SKIP_TLS_VERIFICATION
          value: "false"
        - name: REDIS_EXPORTER_CHECK_KEYS
          value: "*"
        volumeMounts:
        - name: tls-certs
          mountPath: /tls
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: tls-certs
        secret:
          secretName: redis-tls-secret
---
# Service para Redis Exporter Master
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter-master
  namespace: redis
  labels:
    app: redis-exporter
    role: master
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: redis-exporter
    role: master
  ports:
  - name: metrics
    port: 9121
    targetPort: 9121
---
# Service para Redis Exporter Réplicas
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter-replica
  namespace: redis
  labels:
    app: redis-exporter
    role: replica
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: redis-exporter
    role: replica
  ports:
  - name: metrics
    port: 9121
    targetPort: 9121
---
# ServiceMonitor para Prometheus Operator (se disponível)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-master-monitor
  namespace: redis
  labels:
    app: redis-exporter
    role: master
spec:
  selector:
    matchLabels:
      app: redis-exporter
      role: master
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scrapeTimeout: 10s
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: redis-replica-monitor
  namespace: redis
  labels:
    app: redis-exporter
    role: replica
spec:
  selector:
    matchLabels:
      app: redis-exporter
      role: replica
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
    scrapeTimeout: 10s