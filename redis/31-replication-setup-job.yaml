# Job para configurar replicação Redis Master-Replica
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-replication-setup
  namespace: redis
  labels:
    app: redis-setup
spec:
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      labels:
        app: redis-setup
    spec:
      restartPolicy: OnFailure
      containers:
      - name: redis-setup
        image: redis:7-alpine
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: REDIS_PASSWORD
        volumeMounts:
        - name: tls-certs
          mountPath: /tls
          readOnly: true
        command:
        - sh
        - -c
        - |
          set -e
          echo "Aguardando Redis Master estar pronto..."
          
          # Aguardar master estar disponível
          until redis-cli --tls \
            --cert /tls/tls.crt \
            --key /tls/tls.key \
            --cacert /tls/ca.crt \
            -h redis-master.redis.svc.cluster.local -p 6380 \
            -a "$REDIS_PASSWORD" ping | grep -q PONG; do
            echo "Aguardando Redis Master..."
            sleep 5
          done
          
          echo "Redis Master está pronto!"
          
          # Aguardar réplicas estarem disponíveis
          for i in 0 1 2; do
            echo "Aguardando Redis Replica $i estar pronto..."
            until redis-cli --tls \
              --cert /tls/tls.crt \
              --key /tls/tls.key \
              --cacert /tls/ca.crt \
              -h redis-replica-$i.redis-replica-headless.redis.svc.cluster.local -p 6380 \
              -a "$REDIS_PASSWORD" ping | grep -q PONG; do
              echo "Aguardando Redis Replica $i..."
              sleep 5
            done
            echo "Redis Replica $i está pronto!"
          done
          
          echo "Configurando replicação..."
          
          # Configurar cada réplica para replicar do master
          for i in 0 1 2; do
            echo "Configurando réplica $i..."
            redis-cli --tls \
              --cert /tls/tls.crt \
              --key /tls/tls.key \
              --cacert /tls/ca.crt \
              -h redis-replica-$i.redis-replica-headless.redis.svc.cluster.local -p 6380 \
              -a "$REDIS_PASSWORD" \
              REPLICAOF redis-master.redis.svc.cluster.local 6380
            
            # Configurar autenticação para replicação
            redis-cli --tls \
              --cert /tls/tls.crt \
              --key /tls/tls.key \
              --cacert /tls/ca.crt \
              -h redis-replica-$i.redis-replica-headless.redis.svc.cluster.local -p 6380 \
              -a "$REDIS_PASSWORD" \
              CONFIG SET masterauth "$REDIS_PASSWORD"
              
            echo "Réplica $i configurada com sucesso!"
          done
          
          echo "Verificando status da replicação..."
          
          # Verificar status do master
          echo "=== Status do Master ==="
          redis-cli --tls \
            --cert /tls/tls.crt \
            --key /tls/tls.key \
            --cacert /tls/ca.crt \
            -h redis-master.redis.svc.cluster.local -p 6380 \
            -a "$REDIS_PASSWORD" \
            INFO replication
          
          # Verificar status das réplicas
          for i in 0 1 2; do
            echo "=== Status da Réplica $i ==="
            redis-cli --tls \
              --cert /tls/tls.crt \
              --key /tls/tls.key \
              --cacert /tls/ca.crt \
              -h redis-replica-$i.redis-replica-headless.redis.svc.cluster.local -p 6380 \
              -a "$REDIS_PASSWORD" \
              INFO replication
          done
          
          echo "Configuração de replicação concluída com sucesso!"
      volumes:
      - name: tls-certs
        secret:
          secretName: redis-tls-secret