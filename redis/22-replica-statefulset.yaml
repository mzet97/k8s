# StatefulSet para Redis RÃ©plicas
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-replica
  namespace: redis
  labels:
    app: redis-replica
    role: replica
spec:
  serviceName: redis-replica-headless
  replicas: 3
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: redis-replica
      role: replica
  template:
    metadata:
      labels:
        app: redis-replica
        role: replica
    spec:
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["redis-replica"]
              topologyKey: kubernetes.io/hostname
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: role
                  operator: In
                  values: ["master"]
              topologyKey: kubernetes.io/hostname
      containers:
      - name: redis-replica
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        command: ["redis-server"]
        args: ["/usr/local/etc/redis/redis-replica.conf"]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: REDIS_PASSWORD
        - name: REDIS_ROLE
          value: "replica"
        - name: REDIS_MASTER_AUTH
          valueFrom:
            secretKeyRef:
              name: redis-auth
              key: REDIS_PASSWORD
        ports:
        - containerPort: 6379
          name: redis
        - containerPort: 6380
          name: redis-tls
        volumeMounts:
        - name: config
          mountPath: /usr/local/etc/redis
        - name: data
          mountPath: /data
        - name: tls-certs
          mountPath: /tls
          readOnly: true
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              redis-cli --tls \
                --cert /tls/tls.crt \
                --key /tls/tls.key \
                --cacert /tls/ca.crt \
                -h localhost -p 6380 \
                -a "$REDIS_PASSWORD" ping | grep -q PONG
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              redis-cli --tls \
                --cert /tls/tls.crt \
                --key /tls/tls.key \
                --cacert /tls/ca.crt \
                -h localhost -p 6380 \
                -a "$REDIS_PASSWORD" ping | grep -q PONG
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: config
        configMap:
          name: redis-config
          items:
          - key: redis-replica.conf
            path: redis-replica.conf
      - name: tls-certs
        secret:
          secretName: redis-tls-secret
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi
      storageClassName: microk8s-hostpath