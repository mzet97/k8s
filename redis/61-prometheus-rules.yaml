# PrometheusRule para alertas Redis
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: redis-alerts
  namespace: redis
  labels:
    app: redis
    prometheus: kube-prometheus
    role: alert-rules
spec:
  groups:
  - name: redis.rules
    interval: 30s
    rules:
    # Regras de gravação para métricas agregadas
    - record: redis:up
      expr: up{job=~"redis-exporter.*"}
    
    - record: redis:connected_clients
      expr: redis_connected_clients{job=~"redis-exporter.*"}
    
    - record: redis:memory_usage_bytes
      expr: redis_memory_used_bytes{job=~"redis-exporter.*"}
    
    - record: redis:memory_usage_percentage
      expr: (redis_memory_used_bytes{job=~"redis-exporter.*"} / redis_memory_max_bytes{job=~"redis-exporter.*"}) * 100
    
    - record: redis:keyspace_hits_rate
      expr: rate(redis_keyspace_hits_total{job=~"redis-exporter.*"}[5m])
    
    - record: redis:keyspace_misses_rate
      expr: rate(redis_keyspace_misses_total{job=~"redis-exporter.*"}[5m])
    
    - record: redis:hit_ratio
      expr: |
        (
          rate(redis_keyspace_hits_total{job=~"redis-exporter.*"}[5m]) /
          (
            rate(redis_keyspace_hits_total{job=~"redis-exporter.*"}[5m]) +
            rate(redis_keyspace_misses_total{job=~"redis-exporter.*"}[5m])
          )
        ) * 100
    
    - record: redis:commands_processed_rate
      expr: rate(redis_commands_processed_total{job=~"redis-exporter.*"}[5m])
    
    - record: redis:replication_lag_seconds
      expr: redis_master_repl_offset{job=~"redis-exporter.*"} - redis_slave_repl_offset{job=~"redis-exporter.*"}

  - name: redis.alerts
    interval: 30s
    rules:
    # Alertas críticos
    - alert: RedisDown
      expr: redis:up == 0
      for: 1m
      labels:
        severity: critical
        service: redis
      annotations:
        summary: "Redis instance is down"
        description: "Redis instance {{ $labels.instance }} has been down for more than 1 minute."
        runbook_url: "https://redis.io/topics/admin"
    
    - alert: RedisMasterDown
      expr: redis:up{role="master"} == 0
      for: 30s
      labels:
        severity: critical
        service: redis
      annotations:
        summary: "Redis Master is down"
        description: "Redis Master instance {{ $labels.instance }} is down. This will affect write operations."
        runbook_url: "https://redis.io/topics/admin"
    
    - alert: RedisHighMemoryUsage
      expr: redis:memory_usage_percentage > 90
      for: 5m
      labels:
        severity: critical
        service: redis
      annotations:
        summary: "Redis memory usage is critically high"
        description: "Redis instance {{ $labels.instance }} memory usage is {{ $value }}% which is above 90%."
        runbook_url: "https://redis.io/topics/memory-optimization"
    
    - alert: RedisReplicationLag
      expr: redis:replication_lag_seconds > 30
      for: 2m
      labels:
        severity: critical
        service: redis
      annotations:
        summary: "Redis replication lag is high"
        description: "Redis replica {{ $labels.instance }} is lagging behind master by {{ $value }} seconds."
        runbook_url: "https://redis.io/topics/replication"
    
    # Alertas de warning
    - alert: RedisHighMemoryUsageWarning
      expr: redis:memory_usage_percentage > 75
      for: 10m
      labels:
        severity: warning
        service: redis
      annotations:
        summary: "Redis memory usage is high"
        description: "Redis instance {{ $labels.instance }} memory usage is {{ $value }}% which is above 75%."
        runbook_url: "https://redis.io/topics/memory-optimization"
    
    - alert: RedisLowHitRatio
      expr: redis:hit_ratio < 80
      for: 15m
      labels:
        severity: warning
        service: redis
      annotations:
        summary: "Redis hit ratio is low"
        description: "Redis instance {{ $labels.instance }} hit ratio is {{ $value }}% which is below 80%."
        runbook_url: "https://redis.io/topics/memory-optimization"
    
    - alert: RedisHighConnections
      expr: redis:connected_clients > 1000
      for: 5m
      labels:
        severity: warning
        service: redis
      annotations:
        summary: "Redis has high number of connections"
        description: "Redis instance {{ $labels.instance }} has {{ $value }} connected clients which is above 1000."
        runbook_url: "https://redis.io/topics/clients"
    
    - alert: RedisSlowQueries
      expr: increase(redis_slowlog_length[5m]) > 10
      for: 5m
      labels:
        severity: warning
        service: redis
      annotations:
        summary: "Redis has slow queries"
        description: "Redis instance {{ $labels.instance }} has {{ $value }} slow queries in the last 5 minutes."
        runbook_url: "https://redis.io/commands/slowlog"
    
    - alert: RedisReplicaDisconnected
      expr: redis_connected_slaves{job=~"redis-exporter.*",role="master"} < 3
      for: 2m
      labels:
        severity: warning
        service: redis
      annotations:
        summary: "Redis replica disconnected"
        description: "Redis master {{ $labels.instance }} has only {{ $value }} connected replicas (expected 3)."
        runbook_url: "https://redis.io/topics/replication"
    
    # Alertas informativos
    - alert: RedisConfigurationChanged
      expr: increase(redis_config_changes_total[1h]) > 0
      for: 0m
      labels:
        severity: info
        service: redis
      annotations:
        summary: "Redis configuration changed"
        description: "Redis instance {{ $labels.instance }} configuration has been changed {{ $value }} times in the last hour."
    
    - alert: RedisHighCommandRate
      expr: redis:commands_processed_rate > 10000
      for: 10m
      labels:
        severity: info
        service: redis
      annotations:
        summary: "Redis command rate is high"
        description: "Redis instance {{ $labels.instance }} is processing {{ $value }} commands per second."
    
    - alert: RedisKeyspaceGrowth
      expr: increase(redis_db_keys[1h]) > 10000
      for: 0m
      labels:
        severity: info
        service: redis
      annotations:
        summary: "Redis keyspace growing rapidly"
        description: "Redis instance {{ $labels.instance }} keyspace has grown by {{ $value }} keys in the last hour."
---
# ConfigMap com dashboards Grafana para Redis
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-grafana-dashboard
  namespace: redis
  labels:
    grafana_dashboard: "1"
data:
  redis-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Redis Monitoring",
        "tags": ["redis"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Redis Instances Status",
            "type": "stat",
            "targets": [
              {
                "expr": "redis:up",
                "legendFormat": "{{ instance }}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "mappings": [
                  {
                    "options": {
                      "0": {
                        "text": "DOWN",
                        "color": "red"
                      },
                      "1": {
                        "text": "UP",
                        "color": "green"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            },
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 0
            }
          },
          {
            "id": 2,
            "title": "Memory Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "redis:memory_usage_percentage",
                "legendFormat": "{{ instance }} Memory %"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 0
            }
          },
          {
            "id": 3,
            "title": "Commands Rate",
            "type": "timeseries",
            "targets": [
              {
                "expr": "redis:commands_processed_rate",
                "legendFormat": "{{ instance }} Commands/sec"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            }
          },
          {
            "id": 4,
            "title": "Hit Ratio",
            "type": "timeseries",
            "targets": [
              {
                "expr": "redis:hit_ratio",
                "legendFormat": "{{ instance }} Hit Ratio %"
              }
            ],
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            }
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }