# ServiceAccount para operações Redis
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redis-operator
  namespace: redis
---
# Role para gerenciar recursos Redis
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: redis
  name: redis-operator
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps", "services", "pods"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["statefulsets", "deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "issuers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# RoleBinding para associar ServiceAccount ao Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: redis-operator
  namespace: redis
subjects:
- kind: ServiceAccount
  name: redis-operator
  namespace: redis
roleRef:
  kind: Role
  name: redis-operator
  apiGroup: rbac.authorization.k8s.io
---
# ClusterRole para cert-manager (se necessário)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: redis-cert-manager
rules:
- apiGroups: ["cert-manager.io"]
  resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# ClusterRoleBinding para cert-manager
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: redis-cert-manager
subjects:
- kind: ServiceAccount
  name: redis-operator
  namespace: redis
roleRef:
  kind: ClusterRole
  name: redis-cert-manager
  apiGroup: rbac.authorization.k8s.io