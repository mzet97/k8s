#!/bin/bash

# Script para corrigir problemas com HPA (HorizontalPodAutoscaler)

echo "üîß Corrigindo problemas com HPA do Redis..."
echo ""

# Verificar se kubectl est√° dispon√≠vel
if ! command -v kubectl &> /dev/null; then
    echo "‚ùå kubectl n√£o encontrado. Verifique se est√° instalado e no PATH."
    exit 1
fi

# Verificar se o cluster est√° acess√≠vel
echo "üì° Verificando conectividade com o cluster..."
if ! kubectl cluster-info &> /dev/null; then
    echo "‚ùå N√£o foi poss√≠vel conectar ao cluster Kubernetes."
    echo "üí° Dica: Verifique se o cluster est√° rodando e o kubeconfig est√° configurado."
    exit 1
fi

echo "‚úÖ Cluster acess√≠vel"
echo ""

# 1. Verificar se metrics-server est√° instalado
echo "üîç Verificando metrics-server..."
if kubectl get deployment metrics-server -n kube-system &> /dev/null; then
    echo "‚úÖ Metrics-server encontrado"
    
    # Verificar se est√° rodando
    if kubectl get pods -n kube-system -l k8s-app=metrics-server --field-selector=status.phase=Running | grep -q metrics-server; then
        echo "‚úÖ Metrics-server est√° rodando"
    else
        echo "‚ö†Ô∏è  Metrics-server n√£o est√° rodando corretamente"
        echo "üìã Status dos pods do metrics-server:"
        kubectl get pods -n kube-system -l k8s-app=metrics-server
    fi
else
    echo "‚ùå Metrics-server n√£o encontrado"
    echo "üí° Para instalar: ./install-metrics-server.sh"
    echo "üí° Para MicroK8s: microk8s enable metrics-server"
fi

echo ""

# 2. Verificar HPAs problem√°ticos
echo "üîç Verificando HPAs no namespace redis..."
kubectl get hpa -n redis

echo ""
echo "üìã Detalhes dos HPAs:"
kubectl describe hpa -n redis

echo ""

# 3. Verificar se os deployments referenciados pelos HPAs existem
echo "üîç Verificando deployments referenciados pelos HPAs..."

# Verificar redis-proxy deployment
if kubectl get deployment redis-proxy -n redis &> /dev/null; then
    echo "‚úÖ Deployment redis-proxy encontrado"
else
    echo "‚ùå Deployment redis-proxy n√£o encontrado"
fi

# Verificar redis-exporter-replica deployment
if kubectl get deployment redis-exporter-replica -n redis &> /dev/null; then
    echo "‚úÖ Deployment redis-exporter-replica encontrado"
else
    echo "‚ùå Deployment redis-exporter-replica n√£o encontrado"
    echo "üí° Este deployment pode estar em outro arquivo ou n√£o ter sido aplicado"
fi

echo ""

# 4. Verificar se os pods t√™m resource requests definidos
echo "üîç Verificando resource requests nos deployments..."

echo "üìä Resources do deployment redis-proxy:"
kubectl get deployment redis-proxy -n redis -o jsonpath='{.spec.template.spec.containers[0].resources}' 2>/dev/null | jq . 2>/dev/null || echo "Sem resources definidos ou jq n√£o dispon√≠vel"

echo ""
echo "üìä Resources do deployment redis-exporter-replica:"
kubectl get deployment redis-exporter-replica -n redis -o jsonpath='{.spec.template.spec.containers[0].resources}' 2>/dev/null | jq . 2>/dev/null || echo "Deployment n√£o encontrado ou sem resources definidos"

echo ""

# 5. Testar coleta de m√©tricas
echo "üß™ Testando coleta de m√©tricas..."
echo "üìä M√©tricas de n√≥s:"
kubectl top nodes 2>/dev/null || echo "‚ö†Ô∏è  M√©tricas de n√≥s n√£o dispon√≠veis"

echo ""
echo "üìä M√©tricas de pods no namespace redis:"
kubectl top pods -n redis 2>/dev/null || echo "‚ö†Ô∏è  M√©tricas de pods n√£o dispon√≠veis"

echo ""

# 6. Sugest√µes de corre√ß√£o
echo "üí° Sugest√µes de corre√ß√£o:"
echo ""
echo "1. Se metrics-server n√£o est√° instalado:"
echo "   - Para MicroK8s: microk8s enable metrics-server"
echo "   - Para outros clusters: ./install-metrics-server.sh"
echo ""
echo "2. Se o deployment redis-exporter-replica n√£o existe:"
echo "   - Verifique se o arquivo 60-monitoring.yaml foi aplicado"
echo "   - Execute: kubectl apply -f 60-monitoring.yaml"
echo ""
echo "3. Se os pods n√£o t√™m resource requests:"
echo "   - HPAs precisam de resource requests para funcionar"
echo "   - Adicione requests de CPU e mem√≥ria nos deployments"
echo ""
echo "4. Para remover HPAs problem√°ticos temporariamente:"
echo "   - kubectl delete hpa redis-exporter-replica-hpa -n redis"
echo "   - kubectl delete hpa redis-proxy-hpa -n redis"
echo ""
echo "5. Para recriar HPAs ap√≥s corrigir os deployments:"
echo "   - kubectl apply -f 70-high-availability.yaml"
echo ""
echo "‚úÖ Diagn√≥stico de HPA conclu√≠do!"