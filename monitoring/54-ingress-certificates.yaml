---
# Certificado TLS para Loki
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: loki-tls
  namespace: monitoring
spec:
  secretName: loki-tls
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
  dnsNames:
  - loki.home.arpa
---
# Ingress para Loki
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: loki-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
    - hosts:
        - loki.home.arpa
      secretName: loki-tls
  rules:
    - host: loki.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: loki
                port:
                  number: 3100
---
# Certificado TLS para Mimir
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: mimir-tls
  namespace: monitoring
spec:
  secretName: mimir-tls
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
  dnsNames:
  - mimir.home.arpa
---
# Ingress para Mimir
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mimir-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
    - hosts:
        - mimir.home.arpa
      secretName: mimir-tls
  rules:
    - host: mimir.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mimir
                port:
                  number: 8080
---
# Certificado TLS para Tempo
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tempo-tls
  namespace: monitoring
spec:
  secretName: tempo-tls
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
  dnsNames:
  - tempo.home.arpa
---
# Ingress para Tempo
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tempo-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
    - hosts:
        - tempo.home.arpa
      secretName: tempo-tls
  rules:
    - host: tempo.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tempo
                port:
                  number: 3200
---
# Certificado TLS para Pyroscope
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pyroscope-tls
  namespace: monitoring
spec:
  secretName: pyroscope-tls
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
  dnsNames:
  - pyroscope.home.arpa
---
# Ingress para Pyroscope
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pyroscope-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: public
  tls:
    - hosts:
        - pyroscope.home.arpa
      secretName: pyroscope-tls
  rules:
    - host: pyroscope.home.arpa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: pyroscope
                port:
                  number: 4040