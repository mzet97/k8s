---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-config
  namespace: monitoring
  labels:
    app: mimir
data:
  mimir.yaml: |
    # Configuração do Mimir para armazenamento de métricas de longo prazo
    target: all
    
    server:
      http_listen_port: 8080
      grpc_listen_port: 9095
      log_level: info
    
    common:
      storage:
        backend: filesystem
        filesystem:
          dir: /data/mimir
    
    blocks_storage:
      backend: filesystem
      filesystem:
        dir: /data/mimir/blocks
      bucket_store:
        sync_dir: /data/mimir/tsdb-sync
      tsdb:
        dir: /data/mimir/tsdb
        retention_period: 24h
    
    compactor:
      data_dir: /data/mimir/compactor
      sharding_ring:
        kvstore:
          store: memberlist
    
    distributor:
      ring:
        kvstore:
          store: memberlist
    
    ingester:
      ring:
        kvstore:
          store: memberlist
        replication_factor: 1
    
    ruler_storage:
      backend: filesystem
      filesystem:
        dir: /data/mimir/rules
    
    ruler:
      rule_path: /data/mimir/rules
      ring:
        kvstore:
          store: memberlist
    
    store_gateway:
      sharding_ring:
        kvstore:
          store: memberlist
    
    memberlist:
      bind_port: 7946
      join_members:
        - mimir-0.mimir.monitoring.svc.cluster.local:7946
    
    limits:
      ingestion_rate: 10000
      ingestion_burst_size: 200000
      max_global_series_per_user: 150000
      max_global_series_per_metric: 20000
      compactor_blocks_retention_period: 0  # Desabilitado para retenção infinita
    
    usage_stats:
      enabled: false
---
apiVersion: v1
kind: Service
metadata:
  name: mimir
  namespace: monitoring
  labels:
    app: mimir
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: 9095
      protocol: TCP
    - name: memberlist
      port: 7946
      targetPort: 7946
      protocol: TCP
  selector:
    app: mimir
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mimir
  namespace: monitoring
  labels:
    app: mimir
spec:
  serviceName: mimir
  replicas: 1
  selector:
    matchLabels:
      app: mimir
  template:
    metadata:
      labels:
        app: mimir
    spec:
      serviceAccountName: mimir
      securityContext:
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      containers:
        - name: mimir
          image: grafana/mimir:2.10.4
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/mimir/mimir.yaml
            - -target=all
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: storage
              mountPath: /data
          env:
            - name: JAEGER_AGENT_HOST
              value: tempo
            - name: JAEGER_ENDPOINT
              value: http://tempo:14268/api/traces
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
      volumes:
        - name: config
          configMap:
            name: mimir-config
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: microk8s-hostpath
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mimir
  namespace: monitoring
  labels:
    app: mimir
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mimir
  labels:
    app: mimir
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mimir
  labels:
    app: mimir
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mimir
subjects:
  - kind: ServiceAccount
    name: mimir
    namespace: monitoring